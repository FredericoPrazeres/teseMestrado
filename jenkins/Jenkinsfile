pipeline {
    agent any

    trigger {
        githubPush()
    }
    
    environment {
        MICROSERVICES = "db api-interface job-postings job-reviews data-access"
        DOCKER_COMPOSE_FILE = "docker-compose.yml"
    }
    
    stages {
        stage('Checkout Info') {
            steps {
                script {
                    sh '''
                        echo "=== CHECKOUT STAGE ==="
                        GIT_COMMIT_HASH=$(git rev-parse --short HEAD)
                        echo "Building commit: $GIT_COMMIT_HASH"
                        echo "Working directory: $(pwd)"
                    '''
                }
            }
        }
        
        stage('Stopping Microservices') {
            steps {
                script {
                    sh '''
                        echo "=== STOPPING CURRENT MICROSERVICES ==="
                        
                        for service in $MICROSERVICES; do
                            docker-compose -f $DOCKER_COMPOSE_FILE stop $service || true
                        done
                        
                    '''
                }
            }
        }

        stage('Removing Microservices Containers') {
            steps {
                script {
                    sh '''
                        echo "=== REMOVING MICROSERVICES CONTAINERS ==="       

                        for service in $MICROSERVICES; do
                            docker-compose -f $DOCKER_COMPOSE_FILE rm -f $service || true
                        done
                    '''
                }
            }
        }
        
        stage('Cleaning Up Docker Images') {
            steps {
                script {
                    sh '''
                        echo "Cleaning up unused Docker images..."
                        docker image prune -f || true
                    '''
                }
            }
        }

        stage('Building and Deploying Services') {
            steps {
                script {
                    sh '''
                        echo "=== BUILDING AND DEPLOYING SERVICES ==="
                        
                        docker-compose up --build -d
                        
                        if [ $? -eq 0 ]; then
                            echo "Services built and started successfully"
                            echo "Waiting for services to initialize..."
                            sleep 15
                        else
                            echo "ERROR: Failed to build and start services"
                            exit 1
                        fi
                    '''
                }
            }
        }
        
        stage('Show Status') {
            steps {
                script {
                    sh '''
                        echo "=== DEPLOYMENT COMPLETE ==="
                        docker-compose -f $DOCKER_COMPOSE_FILE ps
                        echo "ðŸŽ‰ Deployment successful!"
                        echo "Services status:"
                        echo "- Database: http://localhost:5432"
                        echo "- API Interface: http://localhost:8082"
                        echo "- Job Postings: http://localhost:8081"
                        echo "- Job Reviews: http://localhost:8084"
                        echo "- Data Access: http://localhost:8083"
                        echo "- Jenkins: http://localhost:8080"
                    '''
                }
            }
        }
    }
}